[Navbar]
[header: [title: Styles]]
[main: 

## What are the keywords inside of sceneheads?
Currently, styles are either a style object or a function that returns a style.

You can create your own styles in Beanstalk using the HTML library type 'Style'.

The html basic library that starts with any new beanstalk html project will contain many basic styles that you can use.

# Making your own styles

[code:

    -- Default implimentation
    @ Style = (
        tag_type = "span",
        css = "",
        compatibility = All,
        nested_scene_behaviour: {
            force_wrap: false,
            disallow_children: false
        },
        wrappers: {
            before: "",
            after: ""
        },
        content_mode: Normal,
        inlining_rules: 0
    )
]

# Structure of a style:

## Tag type
This is what HTML tag the style will use by default. 
This is important for accessibility and for setting some default behaviour.

Default value = span

## CSS
The CSS that will be applied to the tag. 
This can be individual CSS properties, or CSS classes.

## Events
Events that can be performed on the scene. 
These are things like 'on click'.

## Actions
Actions that are triggered by an event. This could be something like 'swap' or 'hide'. 
An event must be defined before an action can be defined.

## Compatibility: 
Does this style work with other styles? Can be:
- All
- None (can't be used with any other styles)
- Struct of compatible tags (will need specific logic to handle what happens and how the tags will be wrapped)

## Nested Scene Behaviour
Defines what happens to child scenes placed inside this style. 
This can involve forcing an extra style wrapper around all of it's children.
Or even disallow children entierly.

## Wrappers
Does this style need to be wrapped in more tags outiside of it's tag type?

## Content Mode
The content of the scene may instead be used for properties such as becoming the 'alt' tag for media.
- Normal
- Alt

## Inlining Rules
0: inlines itself with p tags before it on after a newline
1: be like headings and break after one newline
1: never inline itself and always break out of the current p tag?
2: ignore it's parents styles / layout completely?
3. break out of all ancestor styles? (apart from the root scene)
4. Completely break out of all scene styles

]